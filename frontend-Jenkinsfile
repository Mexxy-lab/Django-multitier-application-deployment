pipeline {
    agent any

    environment {
        SONAR_AUTH_TOKEN = credentials('sonar-token')
        DOCKERHUB_CREDENTIALS = credentials('pumej-dockerhubtoken')
        IMAGE = 'django-frontend'
        REPO_NAME = 'pumejlab'
        DIRECTORY = 'django-frontend'
    }

    stages {
        // stage('Checkout frontend Code') {  
        //     steps {  
        //         checkout([$class: 'GitSCM',   
        //             branches: [[name: '*/main']],   
        //             userRemoteConfigs: [[url: 'https://github.com/Mexxy-lab/Django-multitier-application-deployment.git', credentialsId: 'git-cred']]  
        //         ])  
        //     }  
        // }
        stage('SCM Checkout') {
            steps{
           git branch: 'main', url: 'https://github.com/Mexxy-lab/Django-multitier-application-deployment.git'
            }
        } 
        stage('SonarQube Analysis') {
            steps {
                dir(env.DIRECTORY) {
                    withSonarQubeEnv('sonar') {
                        sh ''' 
                            $SCANNER_HOME/bin/sonar-scanner \
                                -Dsonar.projectKey=django-frontend \
                                -Dsonar.projectName=django-frontend \
                                -Dsonar.sources=. \
                                -Dsonar.login=$SONAR_AUTH_TOKEN
                        '''
                    }
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    dir(env.DIRECTORY) {
                        sh """
                        docker build -t ${env.REPO_NAME}/${env.IMAGE}:${env.BUILD_NUMBER} .
                        """
                    }
                }
            }
        }
        stage('Login to dockerhub') {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }        
        stage('Trivy Scan (Aqua)') {
            steps {
                script {
                    sh '''
                    echo "üîç Running Trivy vulnerability scan..."
                    
                    # Run Trivy with severity filter and a timeout
                    trivy image \
                      --scanners vuln \
                      --severity HIGH,CRITICAL \
                      --timeout 10m \
                      $REPO_NAME/$IMAGE:$BUILD_NUMBER
                    '''
                }
            }
        }
        stage('Push image to DockerHub') {
            steps{
                sh 'docker push $REPO_NAME/$IMAGE:$BUILD_NUMBER'
            }
        }        
        stage('Update Image Tag in Deployment Repo') {
            steps {
                script {
                    dir('ENVX-EKS-Manifests') {
                        // Clone the repo using GitHub credentials
                        git credentialsId: 'github-cred',
                            url: 'https://github.com/Mexxy-lab/Django-Three-Tier-Manifests.git',
                            branch: 'main'
        
                        // Replace the image tag in frontend-manifests/frontend.yaml
                        sh """
                        sed -i 's|image: pumejlab/django-frontend:.*|image: pumejlab/django-frontend:${env.BUILD_NUMBER}|' frontend-manifests/frontend.yaml
                        echo "updated image tag in frontend-manifests/frontend.yaml"
                        """
        
                        // Git config, commit, and push
                        sh '''
                        git config user.name "jenkins-bot"
                        git config user.email "jenkins@local"
                        git add frontend-manifests/frontend.yaml
                        git commit -m "CI: Update django-frontend image tag to ${BUILD_NUMBER}" || echo "No changes to commit"
                        '''
        
                        // Inject GitHub credentials and push
                        withCredentials([usernamePassword(
                            credentialsId: 'github-cred',
                            usernameVariable: 'GIT_USER',
                            passwordVariable: 'GIT_TOKEN'
                        )]) {
                            sh """
                            git remote set-url origin https://${GIT_USER}:${GIT_TOKEN}@github.com/Mexxy-lab/Django-Three-Tier-Manifests.git
                            git push origin main
                            echo "changes pushed to GitHub"
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Docker image pushed: ${env.REPO_NAME}/${env.IMAGE}:${env.BUILD_NUMBER}"
        }
        failure {
            echo "Build or push failed."
        }
    }
}
